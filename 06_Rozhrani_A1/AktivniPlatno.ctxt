#BlueJ class context
comment0.params=
comment0.target=AktivniPlatno()
comment0.text=\r\n\ Vytvori\ instanci\ tridy\ -\ je\ volana\ pouze\ jednou.\r\n
comment1.params=evt
comment1.target=void\ windowClosing(java.awt.event.WindowEvent)
comment10.params=rozmer
comment10.target=void\ setRozmer(Rozmer)
comment10.text=\r\n\ Nastavi\ rozmer\ platna\ zadanim\ jeho\ polickove\ vysky\ a\ sirky.\r\n\r\n\ @param\ \ rozmer\ \ Zadavany\ rozmer\ v\ poctu\ policek\r\n
comment11.params=
comment11.target=boolean\ getMrizka()
comment11.text=\r\n\ Vrati\ informaci\ o\ tom,\ je-li\ zobrazovana\ mrizka.\r\n\r\n\ @return\ Mrizka\ je\ zobrazovana\ \=\ true,\ neni\ zobrazovana\ \=\ false.\r\n
comment12.params=zobrazit
comment12.target=void\ setMrizka(boolean)
comment12.text=\r\n\ V\ zavislosti\ na\ hodnte\ parametru\ nastavi\ nebo\ potlaci\r\n\ zobrazovani\ car\ mrizky.\r\n\r\n\ @param\ zobrazit\ \ Jestli\ mrizku\ zobrazovat.\r\n
comment13.params=
comment13.target=boolean\ isViditelne()
comment13.text=\r\n\ Poskytuje\ informaci\ o\ aktualni\ viditelnosti\ okna.\r\n\r\n\ @return\ Je-li\ okno\ viditelne,\ vraci\ <b>true</b>,\ jinak\ vraci\ <b>false</b>\r\n
comment14.params=viditelne
comment14.target=void\ setViditelne(boolean)
comment14.text=\r\n\ V\ zavislosti\ na\ hodnte\ parametru\ nastavi\ nebo\ potlaci\ viditelnost\ platna.\r\n\r\n\ @param\ viditelne\ logicka\ hodnota\ pozadovane\ viditelnost\ (true\=viditelne)\r\n
comment15.params=
comment15.target=Barva\ getBarvaPozadi()
comment15.text=\r\n\ Vrati\ aktualni\ barvu\ pozadi.\r\n\r\n\ @return\ \ Nastavena\ barva\ pozadi\r\n
comment16.params=barva
comment16.target=void\ setBarvaPozadi(Barva)
comment16.text=\r\n\ Nastavi\ pro\ platno\ barvu\ pozadi.\r\n\r\n\ @param\ \ barva\ \ Nastavovana\ barva\ pozadi\r\n
comment17.params=
comment17.target=int\ getNekresli()
comment17.text=\r\n\ Pomocna\ metoda\ pro\ ucely\ ladeni\ aby\ bylo\ mozno\ zkontrolovat,\r\n\ ze\ na\ konci\ metody\ ma\ semafor\ stejnou\ hodnotu,\ jako\ mel\ na\ pocatku.\r\n\r\n\ @return\ \ Stav\ vnitrniho\ semaforu\:\ >0\ \ -\ nebude\ se\ kreslit,<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\=0\ -\ kresli\ se,<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <0\ \ -\ chyba\r\n
comment18.params=
comment18.target=java.lang.String\ toString()
comment18.text=\r\n\ Prevede\ instanci\ na\ retezec.\ Pouziva\ se\ predevsim\ pri\ ladeni.\r\n\r\n\ @return\ Retezcova\ reprezentace\ dane\ instance.\r\n
comment19.params=
comment19.target=void\ prekresli()
comment19.text=\r\n\ Vykresli\ vsechny\ elementy.\r\n
comment2.params=g
comment2.target=void\ paint(java.awt.Graphics)
comment2.text=Povinne\ prekryvana\ abstraktni\ metoda\ tridy\ JPanel.
comment20.params=
comment20.target=void\ nekresli()
comment20.text=\r\n\ Potlaci\ prekreslovani\ platna,\ presneji\ zvysi\ hladinu\ potlaceni\r\n\ prekreslovani\ o\ jednicku.\ Navratu\ do\ stavu\ pred\ volanim\ teto\ metody\r\n\ se\ dosahne\ zavolanim\ metody\ <code>vratKresli()</code>.</p>\r\n\ <p>\r\n\ Metody\ <code>nekresli()</code>\ a\ <code>vratKresli()</code>\r\n\ se\ tak\ chovaji\ obdobne\ jako\ zavorky,\ mezi\ nimiz\ je\ vykreslovani\r\n\ potlaceno.</p>\r\n
comment21.params=
comment21.target=void\ vratKresli()
comment21.text=\r\n\ Vrati\ prekreslovani\ do\ stavu\ pred\ poslednim\ volanim\ metody\r\n\ <code>nekresli()</code>.\ Predchazelo-li\ proto\ vice\ volani\ metody\r\n\ <code>nekresli()</code>,\ zacne\ se\ prekreslovat\ az\ po\ odpovidajim\ poctu\r\n\ zavolani\ metody\ <code>vratKresli()</code>.\r\n\r\n\ @throws\ IllegalStateException\r\n\ \ \ \ \ \ \ \ \ Je-li\ metoda\ volana\ aniz\ by\ predchazelo\ odpovidajici\ volani\r\n\ \ \ \ \ \ \ \ \ <code>nekresli()</code>.\r\n
comment22.params=obrazec
comment22.target=boolean\ odstran(IKresleny)
comment22.text=\r\n\ Odstrani\ zadany\ obrazec\ ze\ seznamu\ malovanych.\r\n\ Byl-li\ obrazec\ v\ seznamu,\ prekresli\ vlastniPlatno.\r\n\r\n\ @param\ obrazec\ \ Odstranovany\ obrazec\r\n\r\n\ @return\ \ true\ v\ pripade,\ kdyz\ obrazec\ v\ seznamu\ byl,\r\n\ \ \ \ \ \ \ \ \ \ false\ v\ pripade,\ kdyz\ nebylo\ co\ odstranovat\r\n
comment23.params=
comment23.target=void\ odstranVse()
comment23.text=\r\n\ Vycisti\ platno,\ tj.\ vyprazdni\ seznam\ malovanych\r\n\ (odstrani\ z\ nej\ vsechny\ obrazce).\r\n
comment24.params=obrazec
comment24.target=boolean\ pridej(IKresleny)
comment24.text=\r\n\ Neni-li\ zadany\ obrazec\ v\ seznamu\ malovanych,\ prida\ jej\ na\ konec\r\n\ (bude\ se\ kreslit\ jako\ posledni,\ tj.\ na\ vrchu.\r\n\ Byl-li\ obrazec\ opravdu\ pridan,\ prekresli\ platno.\r\n\r\n\ @param\ \ obrazec\ \ Pridavany\ obrazec\r\n\r\n\ @return\ \ true\ v\ pripade,\ kdyz\ byl\ obrazec\ opravdu\ pridan,\r\n\ \ \ \ \ \ \ \ \ \ false\ v\ pripade,\ kdyz\ jiz\ mezi\ zobrazovanymi\ byl\r\n
comment25.params=soucasny\ pridany
comment25.target=boolean\ pridejNad(IKresleny,\ IKresleny)
comment25.text=\r\n\ Prida\ obrazec\ do\ seznamu\ malovanych\ tak,\ aby\ byl\ kreslen\r\n\ nad\ zadanym\ obrazcem.\r\n\ Pokud\ jiz\ v\ seznamu\ byl,\ jenom\ jej\ presune\ do\ zadane\ pozice.\r\n\r\n\ @param\ \ soucasny\ \ Obrazec,\ ktery\ ma\ byt\ pri\ kresleni\ pod\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ pridavanym\ obrazcem\r\n\ @param\ \ pridany\ \ \ Pridavany\ obrazec\r\n\r\n\ @return\ \ true\ \ v\ pripade,\ kdyz\ byl\ obrazec\ opravdu\ pridan,\r\n\ \ \ \ \ \ \ \ \ \ \ false\ v\ pripade,\ kdyz\ jiz\ mezi\ zobrazovanymi\ byl\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ a\ pouze\ se\ presunul\ do\ jine\ urovne\r\n
comment26.params=soucasny\ pridany
comment26.target=boolean\ pridejPod(IKresleny,\ IKresleny)
comment26.text=\r\n\ Prida\ obrazec\ do\ seznamu\ malovanych\ tak,\ aby\ byl\ kreslen\r\n\ pod\ zadanym\ obrazcem.\r\n\ Pokud\ jiz\ v\ seznamu\ byl,\ jenom\ jej\ presune\ do\ zadane\ pozice.\r\n\r\n\ @param\ \ soucasny\ \ Obrazec,\ ktery\ ma\ byt\ pri\ kresleni\ nad\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ pridavanym\ obrazcem\r\n\ @param\ \ pridany\ \ \ Pridavany\ obrazec\r\n\r\n\ @return\ \ true\ \ v\ pripade,\ kdyz\ byl\ obrazec\ opravdu\ pridan,\r\n\ \ \ \ \ \ \ \ \ \ \ false\ v\ pripade,\ kdyz\ jiz\ mezi\ zobrazovanymi\ byl\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ a\ pouze\ se\ presunul\ do\ jine\ urovne\r\n
comment27.params=obrazec
comment27.target=int\ poradi(IKresleny)
comment27.text=\r\n\ Vrati\ poradi\ zadaneho\ prvku\ v\ seznamu\ kreslenych\ prvku.\r\n\ Prvky\ se\ pritom\ kresli\ v\ rostoucim\ poradi,\ takze\ obrazec\r\n\ s\ vetsim\ poradim\ je\ kreslen\ nad\ obrazcem\ s\ mensim\ poradim.\r\n\ Neni-li\ zadany\ obrazec\ mezi\ kreslenymi,\ vrati\ -1.\r\n\r\n\ @param\ \ obrazec\ \ Objekt,\ na\ jehoz\ kreslici\ poradi\ se\ dotazujeme\r\n\r\n\ @return\ \ Poradi\ obrazce;\ prvy\ kresleny\ obrazec\ ma\ poradi\ 0.\r\n\ \ \ \ \ \ \ \ \ \ \ Neni-li\ zadany\ obrazec\ mezi\ kreslenymi,\ vrati\ -1.\r\n
comment28.params=
comment28.target=java.lang.String\ nazvyKreslenych()
comment28.text=\r\n\ Vrati\ retezec\ s\ nazvy\ vsech\ spravovanych\ obrazku.\r\n\r\n\ @return\ \ pozadovany\ retezec\r\n
comment29.params=
comment29.target=java.util.List\ seznamKreslenych()
comment29.text=\r\n\ Vrati\ nemodifikovatelny\ seznam\ vsech\ spravovanych\ obrazku.\r\n\r\n\ @return\ \ Pozadovany\ seznam\r\n
comment3.params=
comment3.target=AktivniPlatno\ getPlatno()
comment3.text=\r\n\ Jedina\ metoda\ umoznujici\ ziskat\ odkaz\ na\ instanci\ platna.\r\n\ Vraci\ vsak\ pokazde\ odkaz\ na\ stejnou\ instanci,\r\n\ protoze\ instance\ platna\ je\ jedinacek.\r\n\ <p>\r\n\ Pokud\ instance\ pri\ volani\ metody\ jeste\ neexistuje,\r\n\ metoda\ instanci\ vytvori.</p>\r\n\r\n\ @return\ Instance\ tridy\ AktivniPlatno\r\n
comment4.params=krok\ sirka\ vyska
comment4.target=void\ setKrokRozmer(int,\ int,\ int)
comment4.text=\r\n\ Nastavi\ rozmer\ platna\ zadanim\ bodove\ velikosti\ policka\ a\r\n\ poctu\ policek\ ve\ vodorovnem\ a\ svislem\ smeru.\r\n\ Pri\ velikosti\ policka\ \=\ 1\ se\ vypina\ zobrazovani\ mrizky.\r\n\r\n\ @param\ \ krok\ \ \ Nova\ bodova\ velikost\ policka\r\n\ @param\ \ sirka\ \ Novy\ pocet\ policek\ vodorovne\r\n\ @param\ \ vyska\ \ Novy\ pocet\ policek\ svisle\r\n
comment5.params=
comment5.target=int\ getKrok()
comment5.text=\r\n\ Vrati\ vzdalenost\ car\ mrizky\ \=\ bodovou\ velikost\ policka.\r\n\r\n\ @return\ Bodova\ velikost\ policka\r\n
comment6.params=velikost
comment6.target=void\ setKrok(int)
comment6.text=\r\n\ Nastavi\ vzdalenost\ car\ mrizky\ \=\ bodovou\ velikost\ policka.\r\n\ Pri\ velikosti\ policka\ \=\ 1\ se\ vypina\ zobrazovani\ mrizky.\r\n\r\n\ @param\ velikost\ \ Nova\ bodova\ velikost\ policka\r\n
comment7.params=
comment7.target=int\ getSirka()
comment7.text=\r\n\ Vrati\ polickovou\ sirku\ platna.\r\n\r\n\ @return\ \ Aktualni\ polickova\ sirka\ platna\ (pocet\ policek\ vodorovne)\r\n
comment8.params=
comment8.target=int\ getVyska()
comment8.text=\r\n\ Vrati\ polickovou\ vysku\ platna.\r\n\r\n\ @return\ \ Aktualni\ polickova\ vyska\ platna\ (pocet\ policek\ svisle)\r\n
comment9.params=sirka\ vyska
comment9.target=void\ setRozmer(int,\ int)
comment9.text=\r\n\ Nastavi\ rozmer\ platna\ zadanim\ jeho\ polickove\ vysky\ a\ sirky.\r\n\r\n\ @param\ \ sirka\ \ Novy\ pocet\ policek\ vodorovne\r\n\ @param\ \ vyska\ \ Novy\ pocet\ policek\ svisle\r\n
numComments=30
